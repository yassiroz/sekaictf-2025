services:
  sekaibank-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sekaibank-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@sekaibank-mongo:27017/sekaibank?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE:-15m}
      - JWT_REFRESH_EXPIRE=${JWT_REFRESH_EXPIRE:-7d}
      - PIN_MAX_ATTEMPTS=${PIN_MAX_ATTEMPTS:-3}
      - PIN_LOCK_DURATION=${PIN_LOCK_DURATION:-3600000}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      sekaibank-mongo:
        condition: service_healthy
    networks:
      - sekaibank-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3000, path: '/api/health', timeout: 2000 }; const req = http.request(options, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sekaibank-mongo:
    image: mongo:7.0
    container_name: sekaibank-mongo
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=sekaibank
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - sekaibank-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: mongod --auth

  mongo-express:
    image: mongo-express:1.0.0
    container_name: sekaibank-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@sekaibank-mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      sekaibank-mongo:
        condition: service_healthy
    networks:
      - sekaibank-network
    profiles:
      - tools

volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local

networks:
  sekaibank-network:
    driver: bridge 